apply plugin: 'com.jfrog.bintray'

version = libraryVersion

if (project.hasProperty("android")) {
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    tasks.withType(Javadoc).all {
        enabled = false
    }
    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }

    task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
        classifier = 'javadoc'
        from "../docs"
    }
} else {
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    tasks.withType(Javadoc).all {
        enabled = false
    }
    task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
        classifier = 'javadoc'
        from "../docs"
    }
}

bintrayUpload.dependsOn assemble
bintrayUpload.dependsOn sourcesJar
bintrayUpload.dependsOn javadocJar

artifacts {
    archives javadocJar
    archives sourcesJar
}


if(project.rootProject.file('local.properties').exists()) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    bintray {
        user = properties.getProperty('BINTRAY_USERNAME')
        String bintrayUserOrg = properties.getProperty('BINTRAY_ORG')
        key = properties.getProperty('BINTRAY_API_KEY')

        configurations = ['archives']
        pkg {
            repo = bintrayRepo
            name = bintrayName
            desc = libraryDescription

            userOrg = bintrayUserOrg

            websiteUrl = siteUrl
            vcsUrl = gitUrl
            licenses = allLicenses
            publish = true
            publicDownloadNumbers = true
            version {
                desc = libraryDescription
            }
        }
    }
}