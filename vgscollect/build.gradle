plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'org.jetbrains.dokka'
    id 'com.vanniktech.maven.publish'
}

android {
    compileSdkVersion 32

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 32
        versionCode VERSION_CODE.toInteger()
        versionName VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        vectorDrawables.useSupportLibrary = true

        buildConfigField "String", "VERSION_NAME", "\"$VERSION_NAME\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    androidExtensions {
        experimental = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
}

dependencies {
    implementation libs.androidx.appcompat
    implementation libs.androidx.core.ktx

    api libs.material
    api libs.okhttp

    testImplementation testLibs.junit
    testImplementation testLibs.mockito.core
    testImplementation testLibs.mockito.inline
    testImplementation testLibs.robolectric
    testImplementation testLibs.mockk
    testImplementation testLibs.json
    testImplementation testLibs.jsonassert

    androidTestImplementation androidTestLibs.androidx.runner
    androidTestImplementation androidTestLibs.androidx.junit.ext
    androidTestImplementation androidTestLibs.androidx.espresso.core

    dokkaHtmlPlugin(libs.dokka.base)
}

tasks.withType(Javadoc).all {
    enabled = false
}

tasks.named("dokkaHtml") {
    outputDirectory.set(rootProject.file('docs'))
}