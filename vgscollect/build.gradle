plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'org.jetbrains.dokka'
    id 'com.vanniktech.maven.publish'
}

android {
    compileSdkVersion 32

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 32
        versionCode VERSION_CODE.toInteger()
        versionName VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        vectorDrawables.useSupportLibrary = true

        buildConfigField "String", "VERSION_NAME", "\"$VERSION_NAME\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    androidExtensions {
        experimental = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
}

dependencies {
    implementation "androidx.appcompat:appcompat:${versions.appcompat}"
    implementation "androidx.core:core-ktx:${versions.core_ktx}"

    api "com.google.android.material:material:${versions.material}"
    api "com.squareup.okhttp3:okhttp:${versions.okhttp}"

    testImplementation "junit:junit:${testVersions.junit}"
    testImplementation "org.mockito:mockito-core:${testVersions.mockito_core}"
    testImplementation "org.mockito:mockito-inline:${testVersions.mockito_inline}"
    testImplementation "org.robolectric:robolectric:${testVersions.robolectric}"
    testImplementation "io.mockk:mockk:${testVersions.mockk}"
    testImplementation "org.json:json:${testVersions.json}"
    testImplementation "org.skyscreamer:jsonassert:${testVersions.jsonassert}"

    androidTestImplementation "androidx.test:runner:${testVersions.runner}"
    androidTestImplementation "androidx.test.ext:junit:${testVersions.junit_ext}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${testVersions.espresso_core}"

    dokkaHtmlPlugin("org.jetbrains.dokka:dokka-base:${versions.dokka_base}")
}

tasks.withType(Javadoc).all {
    enabled = false
}

tasks.named("dokkaHtml") {
    outputDirectory.set(rootProject.file('docs'))
}